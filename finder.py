import cv2
import sys
import numpy as np
from matplotlib import pyplot as plt


'''
Две части разработки:
    1) определить hsv параметр для трещины(возможно перебрав все пиксели, можно найти резкий перепад, сравнив между собой несколько соседних)
    2) преобразовать картинку в найденный hsv и разбив его на куски с помощью shape, для каждого куска строить find contours, либо просто использовать findcontours

Первый пунк является основным, т к. позволяет определить цвет трещины, что нам и надо

Разбить картинку на квадратике, просматривать какждый и смотреть сколько в нем цветов, если цветов будет несколько значит в этом квадрате есть трещина

Характеристика поиска трещины:
    1) вокруг трещины имеется контур значение value(v из HSV) которого сильно меньше чем в самой трещине
    2) цвет внутри трещины очень яркий(нужно узнать на сколько)
    3) трещина имеет характерную форму

!!!Решение: просто сгладить картинку(размытие по Гауссу) -> затем применить фильтр Собеля -> найти контуры

'''            

class processed_image():
    def __init__(self):
        self.blur = cv2.bilateralFilter(image, 9, 150, 150)

    def sobel_func(self, image):
        pass

    def find_contours(self):
        pass



def draw_contours():
    pass


if __name__ == "__main__":
    img = cv2.imread('paint0.jpeg')
    cv2.imshow('window', gaussian_func(img))
    cv2.waitKey(0)
